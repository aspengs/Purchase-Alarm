# version: 2
# jobs:
#   build:
#     docker:
#       - image: circleci/node:6.14-browsers
#     environment:
#       CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
#       MOCHA_FILE: $CIRCLE_TEST_REPORTS/junit/test-results.xml
#       CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
#       APP_ENV: prod
#     working_directory: ~/garbarino-com/checkout-alarms
#     steps:
#       - checkout
#       - restore_cache:
#               keys:
#               # This branch if available
#               - v1-dep-{{ .Branch }}-{{ checksum "package.json" }}
#               # Default branch if not
#               - v1-dep-master-
#               # Any branch if there are none on the default branch - this should be unnecessary if you have your default branch configured correctly
#               - v1-dep-
#       - run: sudo npm install -g yarn
#       - run: yarn
#       - run:
#           command: yarn test --reporter mocha-junit-reporter
#       - run: mkdir -p $CIRCLE_TEST_REPORTS
#       - store_test_results:
#           path: /tmp/circleci-test-results
#       - run: sudo apt-get install -y python3-pip
#       - run: sudo pip3 install awscli
#       - run: rm -rf node_modules
#       - run: yarn --ignore-engines
#       - run: yarn run build
#       - run: aws s3 sync ./statics s3://garbarino-fe/checkout-ui/statics --cache-control max-age=604800
#       - run: ls | grep -v "^statics" | grep -v "^node_modules" | zip -r /tmp/app.zip -@ .ebextensions
#       - run:
#           name: Deploy All Branches
#           command: |
#             if [[ "${CIRCLE_TAG}" =~ CHECKOUT-* ]]
#             then
#               aws s3 cp /tmp/app.zip s3://garbarino-deploys/checkout-ui/builds/$CIRCLE_SHA1-SNAPSHOT-$CIRCLE_TAG-$CIRCLE_BUILD_NUM.zip
#               aws elasticbeanstalk create-application-version --application-name chk-ui --version-label $CIRCLE_SHA1-$CIRCLE_TAG-$CIRCLE_BUILD_NUM --source-bundle S3Bucket=garbarino-deploys,S3Key=checkout-ui/builds/$CIRCLE_SHA1-SNAPSHOT-$CIRCLE_TAG-$CIRCLE_BUILD_NUM.zip --region us-east-1
#             elif [ "$CIRCLE_BRANCH" == "master" ]
#             then
#               aws s3 cp /tmp/app.zip s3://garbarino-deploys/checkout-ui/builds/$CIRCLE_SHA1-$CIRCLE_BUILD_NUM.zip
#               aws elasticbeanstalk create-application-version --application-name chk-ui --version-label $CIRCLE_SHA1-$CIRCLE_BUILD_NUM --source-bundle S3Bucket=garbarino-deploys,S3Key=checkout-ui/builds/$CIRCLE_SHA1-$CIRCLE_BUILD_NUM.zip --region us-east-1
#               aws elasticbeanstalk update-environment --environment-name chk-ui-staging --version-label $CIRCLE_SHA1-$CIRCLE_BUILD_NUM --region us-east-1 
#             elif [ "$CIRCLE_BRANCH" == "develop" ]
#             then
#               aws s3 cp /tmp/app.zip s3://garbarino-deploys/checkout-ui/builds/$CIRCLE_SHA1-SNAPSHOT-$CIRCLE_BUILD_NUM.zip
#               aws elasticbeanstalk create-application-version --application-name chk-ui --version-label $CIRCLE_SHA1-$CIRCLE_BUILD_NUM-ci --source-bundle S3Bucket=garbarino-deploys,S3Key=checkout-ui/builds/$CIRCLE_SHA1-SNAPSHOT-$CIRCLE_BUILD_NUM.zip --region us-east-1
#               aws elasticbeanstalk update-environment --environment-name chk-ui-ci --version-label $CIRCLE_SHA1-$CIRCLE_BUILD_NUM-ci --region us-east-1
#             fi

# workflows:
#   version: 2
#   build_and_test:
#     jobs:
#       - build:
#           filters:
#             branches:
#               only:
#                 - develop
#                 - master
#             tags:
#               only: /^CHECKOUT-.*/
