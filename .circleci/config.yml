defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:8

whitelist: &whitelist
  paths:
    - client/*
    - config/*
    - .npmignore
    - coverage/*
    - dist/*
    - node_modules/*
    - src/*
    - Dockerfile
    - package.json
    - README.md
    - tsconfig.json

version: 2
jobs:
  checkout:
    <<: *defaults

    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Install Dependencies
          command: yarn install
      - run:
          name: Install Client Dependencies
          command: cd client && yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          root: ~/repo
          <<: *whitelist 

  build_client:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Build TypeScript code
          command: cd client && yarn build

      - persist_to_workspace:
          root: ~/repo
          <<: *whitelist

  deploy_client:
    <<: *defaults

    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Install aws dependencies
          command: |
            sudo apt-get update
            sudo apt-get install awscli
      - run:
          name: Deploy client
          command: |
            cd client
            chmod +x deploy.sh
            ./deploy.sh checkout-alarms-staging.garbarino.com E2TQ3NHJMCOJXP

  deploy_server:
    machine: true
    
    working_directory: ~/repo

    environment:
      ARTIFACT_NAME: checkout-alarms
      AWS_DEFAULT_REGION: "us-east-1"

    steps:
      - attach_workspace:
          at: ~/repo

      - run:
          name: Install aws dependencies
          command: |
            sudo apt-get update
            sudo apt-get install awscli
      - run:
          name: Get ENVIRONMENT_NAME
          command: |
            if [ "$CIRCLE_BRANCH" == "master" ]; then
            echo 'export ENVIRONMENT_NAME=staging' >> $BASH_ENV
            else
            echo 'export ENVIRONMENT_NAME=ci' >> $BASH_ENV
            fi
      - run:
          name: Set Version
          command: |
            echo $CIRCLE_SHA1-$CIRCLE_BUILD_NUM > /tmp/version
      - run: mkdir -pv /tmp/release
      - run: cp -r `ls | grep -v "^statics" | grep -v "^node_modules" | grep -v "^client"` /tmp/release
      - run:
          name: Build Image
          command: docker build -t $ARTIFACT_NAME /tmp/release/
      - run: aws s3 cp s3://garbarino-deploy-scripts/deploy_ecs.sh /tmp/release/deploy_ecs.sh
      - run: chmod +x /tmp/release/deploy_ecs.sh
      - run:
          name: Deploy Server
          command: /tmp/release/deploy_ecs.sh $ENVIRONMENT_NAME $ARTIFACT_NAME

workflows:
  version: 2

  build:
    jobs:
      - checkout
      - build_client:
          requires:
            - checkout
      - deploy_server:
          requires:
            - checkout
  release:
    jobs:
      - checkout:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - build_client:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
          requires:
            - checkout
      - deploy_client:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
          requires:
            - build_client